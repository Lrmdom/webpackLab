/*
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD.
    define(["expect.js", "../../src/index"], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require("expect.js"), require("../../src/index"));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
})(this, function (expect, SwaggerJsClient) {
  "use strict";

  var instance;

  describe("(package)", function () {
    describe("Feedback", function () {
      beforeEach(function () {
        instance = new SwaggerJsClient.Feedback();
      });

      it("should create an instance of Feedback", function () {
        // TODO: update the code to test Feedback
        expect(instance).to.be.a(SwaggerJsClient.Feedback);
      });

      it('should have the property id (base name: "id")', function () {
        // TODO: update the code to test the property id
        expect(instance).to.have.property("id");
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property codCasa (base name: "codCasa")', function () {
        // TODO: update the code to test the property codCasa
        expect(instance).to.have.property("codCasa");
        // expect(instance.codCasa).to.be(expectedValueLiteral);
      });

      it('should have the property valorVoto (base name: "valorVoto")', function () {
        // TODO: update the code to test the property valorVoto
        expect(instance).to.have.property("valorVoto");
        // expect(instance.valorVoto).to.be(expectedValueLiteral);
      });

      it('should have the property comment (base name: "comment")', function () {
        // TODO: update the code to test the property comment
        expect(instance).to.have.property("comment");
        // expect(instance.comment).to.be(expectedValueLiteral);
      });

      it('should have the property idCliente (base name: "idCliente")', function () {
        // TODO: update the code to test the property idCliente
        expect(instance).to.have.property("idCliente");
        // expect(instance.idCliente).to.be(expectedValueLiteral);
      });

      it('should have the property reserva (base name: "reserva")', function () {
        // TODO: update the code to test the property reserva
        expect(instance).to.have.property("reserva");
        // expect(instance.reserva).to.be(expectedValueLiteral);
      });

      it('should have the property revisto (base name: "revisto")', function () {
        // TODO: update the code to test the property revisto
        expect(instance).to.have.property("revisto");
        // expect(instance.revisto).to.be(expectedValueLiteral);
      });

      it('should have the property aproved (base name: "aproved")', function () {
        // TODO: update the code to test the property aproved
        expect(instance).to.have.property("aproved");
        // expect(instance.aproved).to.be(expectedValueLiteral);
      });
    });
  });
});
