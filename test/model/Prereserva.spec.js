/*
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD.
    define(["expect.js", "../../src/index"], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require("expect.js"), require("../../src/index"));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
})(this, function (expect, SwaggerJsClient) {
  "use strict";

  var instance;

  describe("(package)", function () {
    describe("Prereserva", function () {
      beforeEach(function () {
        instance = new SwaggerJsClient.Prereserva();
      });

      it("should create an instance of Prereserva", function () {
        // TODO: update the code to test Prereserva
        expect(instance).to.be.a(SwaggerJsClient.Prereserva);
      });

      it('should have the property casa (base name: "casa")', function () {
        // TODO: update the code to test the property casa
        expect(instance).to.have.property("casa");
        // expect(instance.casa).to.be(expectedValueLiteral);
      });

      it('should have the property nPrereserva (base name: "nPrereserva")', function () {
        // TODO: update the code to test the property nPrereserva
        expect(instance).to.have.property("nPrereserva");
        // expect(instance.nPrereserva).to.be(expectedValueLiteral);
      });

      it('should have the property data (base name: "data")', function () {
        // TODO: update the code to test the property data
        expect(instance).to.have.property("data");
        // expect(instance.data).to.be(expectedValueLiteral);
      });

      it('should have the property expira (base name: "expira")', function () {
        // TODO: update the code to test the property expira
        expect(instance).to.have.property("expira");
        // expect(instance.expira).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function () {
        // TODO: update the code to test the property id
        expect(instance).to.have.property("id");
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property codCasa (base name: "codCasa")', function () {
        // TODO: update the code to test the property codCasa
        expect(instance).to.have.property("codCasa");
        // expect(instance.codCasa).to.be(expectedValueLiteral);
      });

      it('should have the property nmMes (base name: "nmMes")', function () {
        // TODO: update the code to test the property nmMes
        expect(instance).to.have.property("nmMes");
        // expect(instance.nmMes).to.be(expectedValueLiteral);
      });

      it('should have the property nSemana (base name: "nSemana")', function () {
        // TODO: update the code to test the property nSemana
        expect(instance).to.have.property("nSemana");
        // expect(instance.nSemana).to.be(expectedValueLiteral);
      });

      it('should have the property inicio (base name: "inicio")', function () {
        // TODO: update the code to test the property inicio
        expect(instance).to.have.property("inicio");
        // expect(instance.inicio).to.be(expectedValueLiteral);
      });

      it('should have the property fim (base name: "fim")', function () {
        // TODO: update the code to test the property fim
        expect(instance).to.have.property("fim");
        // expect(instance.fim).to.be(expectedValueLiteral);
      });

      it('should have the property preco (base name: "preco")', function () {
        // TODO: update the code to test the property preco
        expect(instance).to.have.property("preco");
        // expect(instance.preco).to.be(expectedValueLiteral);
      });

      it('should have the property quinzena (base name: "quinzena")', function () {
        // TODO: update the code to test the property quinzena
        expect(instance).to.have.property("quinzena");
        // expect(instance.quinzena).to.be(expectedValueLiteral);
      });

      it('should have the property nome (base name: "nome")', function () {
        // TODO: update the code to test the property nome
        expect(instance).to.have.property("nome");
        // expect(instance.nome).to.be(expectedValueLiteral);
      });

      it('should have the property morada (base name: "morada")', function () {
        // TODO: update the code to test the property morada
        expect(instance).to.have.property("morada");
        // expect(instance.morada).to.be(expectedValueLiteral);
      });

      it('should have the property email (base name: "email")', function () {
        // TODO: update the code to test the property email
        expect(instance).to.have.property("email");
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property telefone (base name: "telefone")', function () {
        // TODO: update the code to test the property telefone
        expect(instance).to.have.property("telefone");
        // expect(instance.telefone).to.be(expectedValueLiteral);
      });

      it('should have the property perguntas (base name: "perguntas")', function () {
        // TODO: update the code to test the property perguntas
        expect(instance).to.have.property("perguntas");
        // expect(instance.perguntas).to.be(expectedValueLiteral);
      });

      it('should have the property sugestoes (base name: "sugestoes")', function () {
        // TODO: update the code to test the property sugestoes
        expect(instance).to.have.property("sugestoes");
        // expect(instance.sugestoes).to.be(expectedValueLiteral);
      });

      it('should have the property comentarios (base name: "comentarios")', function () {
        // TODO: update the code to test the property comentarios
        expect(instance).to.have.property("comentarios");
        // expect(instance.comentarios).to.be(expectedValueLiteral);
      });

      it('should have the property situacao (base name: "situacao")', function () {
        // TODO: update the code to test the property situacao
        expect(instance).to.have.property("situacao");
        // expect(instance.situacao).to.be(expectedValueLiteral);
      });

      it('should have the property formaPagamento (base name: "formaPagamento")', function () {
        // TODO: update the code to test the property formaPagamento
        expect(instance).to.have.property("formaPagamento");
        // expect(instance.formaPagamento).to.be(expectedValueLiteral);
      });

      it('should have the property valor (base name: "valor")', function () {
        // TODO: update the code to test the property valor
        expect(instance).to.have.property("valor");
        // expect(instance.valor).to.be(expectedValueLiteral);
      });

      it('should have the property sessionid (base name: "sessionid")', function () {
        // TODO: update the code to test the property sessionid
        expect(instance).to.have.property("sessionid");
        // expect(instance.sessionid).to.be(expectedValueLiteral);
      });

      it('should have the property voto (base name: "voto")', function () {
        // TODO: update the code to test the property voto
        expect(instance).to.have.property("voto");
        // expect(instance.voto).to.be(expectedValueLiteral);
      });
    });
  });
});
