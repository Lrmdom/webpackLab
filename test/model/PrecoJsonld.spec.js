/*
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD.
    define(["expect.js", "../../src/index"], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require("expect.js"), require("../../src/index"));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerJsClient);
  }
})(this, function (expect, SwaggerJsClient) {
  "use strict";

  var instance;

  describe("(package)", function () {
    describe("PrecoJsonld", function () {
      beforeEach(function () {
        instance = new SwaggerJsClient.PrecoJsonld();
      });

      it("should create an instance of PrecoJsonld", function () {
        // TODO: update the code to test PrecoJsonld
        expect(instance).to.be.a(SwaggerJsClient.PrecoJsonld);
      });

      it('should have the property context (base name: "@context")', function () {
        // TODO: update the code to test the property context
        expect(instance).to.have.property("context");
        // expect(instance.context).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "@id")', function () {
        // TODO: update the code to test the property id
        expect(instance).to.have.property("id");
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "@type")', function () {
        // TODO: update the code to test the property type
        expect(instance).to.have.property("type");
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function () {
        // TODO: update the code to test the property id
        expect(instance).to.have.property("id");
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property ano (base name: "ano")', function () {
        // TODO: update the code to test the property ano
        expect(instance).to.have.property("ano");
        // expect(instance.ano).to.be(expectedValueLiteral);
      });

      it('should have the property nmMes (base name: "nmMes")', function () {
        // TODO: update the code to test the property nmMes
        expect(instance).to.have.property("nmMes");
        // expect(instance.nmMes).to.be(expectedValueLiteral);
      });

      it('should have the property nSemana (base name: "nSemana")', function () {
        // TODO: update the code to test the property nSemana
        expect(instance).to.have.property("nSemana");
        // expect(instance.nSemana).to.be(expectedValueLiteral);
      });

      it('should have the property codCasa (base name: "codCasa")', function () {
        // TODO: update the code to test the property codCasa
        expect(instance).to.have.property("codCasa");
        // expect(instance.codCasa).to.be(expectedValueLiteral);
      });

      it('should have the property inicio (base name: "inicio")', function () {
        // TODO: update the code to test the property inicio
        expect(instance).to.have.property("inicio");
        // expect(instance.inicio).to.be(expectedValueLiteral);
      });

      it('should have the property fim (base name: "fim")', function () {
        // TODO: update the code to test the property fim
        expect(instance).to.have.property("fim");
        // expect(instance.fim).to.be(expectedValueLiteral);
      });

      it('should have the property preco (base name: "preco")', function () {
        // TODO: update the code to test the property preco
        expect(instance).to.have.property("preco");
        // expect(instance.preco).to.be(expectedValueLiteral);
      });

      it('should have the property livre (base name: "livre")', function () {
        // TODO: update the code to test the property livre
        expect(instance).to.have.property("livre");
        // expect(instance.livre).to.be(expectedValueLiteral);
      });

      it('should have the property reservar (base name: "reservar")', function () {
        // TODO: update the code to test the property reservar
        expect(instance).to.have.property("reservar");
        // expect(instance.reservar).to.be(expectedValueLiteral);
      });

      it('should have the property promo (base name: "promo")', function () {
        // TODO: update the code to test the property promo
        expect(instance).to.have.property("promo");
        // expect(instance.promo).to.be(expectedValueLiteral);
      });

      it('should have the property paga (base name: "paga")', function () {
        // TODO: update the code to test the property paga
        expect(instance).to.have.property("paga");
        // expect(instance.paga).to.be(expectedValueLiteral);
      });
    });
  });
});
