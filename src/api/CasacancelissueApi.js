/*
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient";
import { Casacancelissue } from "../model/Casacancelissue";
import { CasacancelissueJsonld } from "../model/CasacancelissueJsonld";
import { InlineResponse2001 } from "../model/InlineResponse2001";

/**
 * Casacancelissue service.
 * @module api/CasacancelissueApi
 * @version 0.0.0
 */
export class CasacancelissueApi {
  /**
    * Constructs a new CasacancelissueApi. 
    * @alias module:api/CasacancelissueApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the deleteCasacancelissueItem operation.
   * @callback moduleapi/CasacancelissueApi~deleteCasacancelissueItemCallback
   * @param {String} error Error message, if any.
   * @param data This operation does not return a value.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Removes the Casacancelissue resource.
   * Removes the Casacancelissue resource.
   * @param {String} id Resource identifier
   * @param {module:api/CasacancelissueApi~deleteCasacancelissueItemCallback} callback The callback function, accepting three arguments: error, data, response
   */
  deleteCasacancelissueItem(id, callback) {
    let postBody = null;
    // verify the required parameter 'id' is set
    if (id === undefined || id === null) {
      throw new Error(
        "Missing the required parameter 'id' when calling deleteCasacancelissueItem"
      );
    }

    let pathParams = {
      id: id,
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = [];
    let returnType = null;

    return this.apiClient.callApi(
      "/api/casacancelissues/{id}",
      "DELETE",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
  /**
   * Callback function to receive the result of the getCasacancelissueCollection operation.
   * @callback moduleapi/CasacancelissueApi~getCasacancelissueCollectionCallback
   * @param {String} error Error message, if any.
   * @param {module:model/InlineResponse2001{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Retrieves the collection of Casacancelissue resources.
   * Retrieves the collection of Casacancelissue resources.
   * @param {Object} opts Optional parameters
   * @param {Number} opts.page The collection page number (default to <.>)
   * @param {module:api/CasacancelissueApi~getCasacancelissueCollectionCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  getCasacancelissueCollection(opts, callback) {
    opts = opts || {};
    let postBody = null;

    let pathParams = {};
    let queryParams = {
      page: opts["page"],
    };
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = ["application/ld+json", "application/json", "text/html"];
    let returnType = InlineResponse2001;

    return this.apiClient.callApi(
      "/api/casacancelissues",
      "GET",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
  /**
   * Callback function to receive the result of the getCasacancelissueItem operation.
   * @callback moduleapi/CasacancelissueApi~getCasacancelissueItemCallback
   * @param {String} error Error message, if any.
   * @param {module:model/CasacancelissueJsonld{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Retrieves a Casacancelissue resource.
   * Retrieves a Casacancelissue resource.
   * @param {String} id Resource identifier
   * @param {module:api/CasacancelissueApi~getCasacancelissueItemCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  getCasacancelissueItem(id, callback) {
    let postBody = null;
    // verify the required parameter 'id' is set
    if (id === undefined || id === null) {
      throw new Error(
        "Missing the required parameter 'id' when calling getCasacancelissueItem"
      );
    }

    let pathParams = {
      id: id,
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = ["application/ld+json", "application/json", "text/html"];
    let returnType = CasacancelissueJsonld;

    return this.apiClient.callApi(
      "/api/casacancelissues/{id}",
      "GET",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
  /**
   * Callback function to receive the result of the patchCasacancelissueItem operation.
   * @callback moduleapi/CasacancelissueApi~patchCasacancelissueItemCallback
   * @param {String} error Error message, if any.
   * @param {module:model/CasacancelissueJsonld{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Updates the Casacancelissue resource.
   * Updates the Casacancelissue resource.
   * @param {module:model/Casacancelissue} body The updated Casacancelissue resource
   * @param {String} id Resource identifier
   * @param {module:api/CasacancelissueApi~patchCasacancelissueItemCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  patchCasacancelissueItem(body, id, callback) {
    let postBody = body;
    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error(
        "Missing the required parameter 'body' when calling patchCasacancelissueItem"
      );
    }
    // verify the required parameter 'id' is set
    if (id === undefined || id === null) {
      throw new Error(
        "Missing the required parameter 'id' when calling patchCasacancelissueItem"
      );
    }

    let pathParams = {
      id: id,
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = ["application/merge-patch+json"];
    let accepts = ["application/ld+json", "application/json", "text/html"];
    let returnType = CasacancelissueJsonld;

    return this.apiClient.callApi(
      "/api/casacancelissues/{id}",
      "PATCH",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
  /**
   * Callback function to receive the result of the postCasacancelissueCollection operation.
   * @callback moduleapi/CasacancelissueApi~postCasacancelissueCollectionCallback
   * @param {String} error Error message, if any.
   * @param {module:model/CasacancelissueJsonld{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Creates a Casacancelissue resource.
   * Creates a Casacancelissue resource.
   * @param {module:model/CasacancelissueJsonld} body The new Casacancelissue resource
   * @param {module:api/CasacancelissueApi~postCasacancelissueCollectionCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  postCasacancelissueCollection(body, callback) {
    let postBody = body;
    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error(
        "Missing the required parameter 'body' when calling postCasacancelissueCollection"
      );
    }

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = ["application/ld+json", "application/json", "text/html"];
    let accepts = ["application/ld+json", "application/json", "text/html"];
    let returnType = CasacancelissueJsonld;

    return this.apiClient.callApi(
      "/api/casacancelissues",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
  /**
   * Callback function to receive the result of the putCasacancelissueItem operation.
   * @callback moduleapi/CasacancelissueApi~putCasacancelissueItemCallback
   * @param {String} error Error message, if any.
   * @param {module:model/CasacancelissueJsonld{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Replaces the Casacancelissue resource.
   * Replaces the Casacancelissue resource.
   * @param {module:model/CasacancelissueJsonld} body The updated Casacancelissue resource
   * @param {String} id Resource identifier
   * @param {module:api/CasacancelissueApi~putCasacancelissueItemCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  putCasacancelissueItem(body, id, callback) {
    let postBody = body;
    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error(
        "Missing the required parameter 'body' when calling putCasacancelissueItem"
      );
    }
    // verify the required parameter 'id' is set
    if (id === undefined || id === null) {
      throw new Error(
        "Missing the required parameter 'id' when calling putCasacancelissueItem"
      );
    }

    let pathParams = {
      id: id,
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = ["application/ld+json", "application/json", "text/html"];
    let accepts = ["application/ld+json", "application/json", "text/html"];
    let returnType = CasacancelissueJsonld;

    return this.apiClient.callApi(
      "/api/casacancelissues/{id}",
      "PUT",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      callback
    );
  }
}
